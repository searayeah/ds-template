[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.poetry]
name = "ds-template"
version = "0.1.0"
description = ""
authors = [
  "Your Name <you@example.com>",
]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
ipywidgets = "^8.1.3"
jupyterlab = "^4.2.1"
pandas = "^2.2.2"
numpy = "^1.26.4"
scipy = "^1.13.1"
tqdm = "^4.66.4"
pandarallel = "^1.6.5"
# vis
seaborn = { version = "^0.13.2", optional = true }
matplotlib = { version = "^3.9.0", optional = true }
# ml
scikit-learn = { version = "^1.5.0", optional = true }
catboost = { version = "^1.2.5", optional = true }
umap-learn = { version = "^0.5.6", optional = true }
# dl
torch = { version = "^2.3.0", optional = true }
torchvision = { version = "^0.18.0", optional = true }
transformers = { version = "^4.41.2", optional = true }
datasets = { version = "^2.19.1", optional = true }
evaluate = { version = "^0.4.2", optional = true }
accelerate = { version = "^0.30.1", optional = true }
torcheval = { version = "^0.0.7", optional = true }
torchaudio = { version = "^2.3.0", optional = true }
lightning = { version = "^2.2.5", optional = true }
opencv-python = { version = "^4.9.0.80", optional = true }
pillow = { version = "^10.3.0", optional = true }
# parse
beautifulsoup4 = { version = "^4.12.3", optional = true }
fake-useragent = { version = "^1.5.1", optional = true }
requests = { version = "^2.32.3", optional = true }
# log
wandb = { version = "^0.17.0", optional = true }
loguru = { version = "^0.7.2", optional = true }
hydra-core = { version = "^1.3.2", optional = true }
omegaconf = { version = "^2.3.0", optional = true }
# onnx
onnxscript = { version = "^0.1.0.dev20240603", optional = true }
onnxruntime = { version = "^1.18.0", optional = true }
onnx = { version = "^1.16.1", optional = true }
skl2onnx = { version = "^1.17.0", optional = true }

[tool.poetry.extras]
vis = [
  "seaborn",
  "matplotlib",
]
ml = [
  "scikit-learn",
  "catboost",
  "umap-learn",
]
dl = [
  "torch",
  "torchvision",
  "transformers",
  "datasets",
  "evaluate",
  "accelerate",
  "torcheval",
  "torchaudio",
  "lightning",
  "opencv-python",
  "pillow",
]
parse = [
  "beautifulsoup4",
  "fake-useragent",
  "requests",
]
log = [
  "wandb",
  "loguru",
  "hydra-core",
  "omegaconf",
]
onnx = [
  "onnxscript",
  "onnxruntime",
  "onnx",
  "skl2onnx",
]

[tool.poetry.group.dev.dependencies]
# do not add DVC to poetry, it is too slow
# linting and formatting
pre-commit = "^3.7.1"
# for vscode
isort = "^5.13.2"
black = "^24.4.0"
flake8 = "^7.0.0"
flake8-bugbear = "^24.4.21"
flake8-simplify = "^0.21.0"
flake8-pyproject = "^1.2.3"
ruff = "^0.4.7"
mypy = "^1.9.0"
pylint = "^3.2.2"
# stubs for mypy type checking and code completions
typing-extensions = "^4.12.1"
pandas-stubs = "^2.2.2.240514"
types-pillow = "^10.2.0.20240520"
types-beautifulsoup4 = "^4.12.0.20240511"
types-tqdm = "^4.66.0.20240417"
types-seaborn = "^0.13.2.20240417"
types-requests = "^2.32.0.20240602"
types-pyyaml = "^6.0.12.20240311"
types-regex = "^2024.5.15.20240519"
types-openpyxl = "^3.1.2.20240601"
types-pygments = "^2.18.0.20240506"
types-colorama = "^0.4.15.20240311"
types-decorator = "^5.1.8.20240310"
types-jsonschema = "^4.22.0.20240501"
types-protobuf = "^5.26.0.20240422"
types-psutil = "^5.9.5.20240516"
types-setuptools = "^70.0.0.20240524"
types-six = "^1.16.21.20240513"
types-tabulate = "^0.9.0.20240106"

[tool.black]
line-length = 90
target-version = [
  "py39",
]
# skip-magic-trailing-comma = true

[tool.ruff]
target-version = "py39"
line-length = 90
extend-include = [
  "*.ipynb",
]

lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # annotationg self in class methods, will be deprecated
  "ANN102", # annotationg cls in class methods, will be deprecated
  "COM812", # missing-trailing-comma
  "D",      # documentation
  "FA100",  # future-annotations
  "RUF012", # mutable class attributes type checking
]

[tool.isort]
profile = "black"
line_length = 90
float_to_top = true

[tool.flake8]
max-line-length = 90
extend-ignore = [
  "E203",
] # Whitespace before ':' for black compatability

# [tool.bandit]
# exclude_dirs = []
# skips = ["B403", "B301"] # pickle files

# [tool.bandit.assert_used]
# skips = ['*_test.py', '*/test_*.py']

[tool.pylint]
py-version = "3.9"
max-line-length = 90
disable = [
  "C0116", # documentation
  "C0114", # documentation
  "C0115", # documentation
]

[tool.mypy]
python_version = "3.9"
strict = true
show_error_context = true
pretty = true
# ignore_missing_imports = true # ignore packages without type-checking

[tool.yamlfix]
comments_min_spaces_from_content = 1
explicit_start = false
none_representation = "null"
quote_representation = "\""
section_whitelines = 1
whitelines = 1
preserve_quotes = true               # unless quote_representation bug is fixed

[tool.autoflake]
expand-star-imports = true
remove-all-unused-imports = true
ignore-init-module-imports = true
remove-duplicate-keys = true
remove-unused-variables = true
recursive = true
in-place = true
